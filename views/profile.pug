extends layout.pug

block sidebar 
  if userProjects
    each element in userProjects
      li.nav-item 
        a.nav-link.pl-3(href=`./collections?projectid=${element.projectId}` style='padding: 0.5rem 0.5rem 0.5rem 1rem;')
          i.fa.fa-solid.fa-paw            
          span.ml-3.item-text= element.projectName

block content
  link(rel='stylesheet', href='../../css/common.css')
  //- script(src='/src/profile.js')
  script(src='/src/plugins/jquery.js')
  script(src='/src/plugins/jquery.flot.js')
  script(src='/src/plugins/jquery.flot.pie.js')
  link(rel='stylesheet', href='../../css/chart.css')

  main.main-content(role='main')
    .container-fluid
      .row.justify-content-center
        .col-12.mt-5.mb-5
          h2.h3.mb-4.page-title(style='font-family: PF Tempesta Seven Extended, sans-serif; font-size: 2rem;') Profile
          .row.mt-5.align-items-center 
            .col-md-3.text-center.mb-5
              .avatar.avatar-xl
                img.avatar-img.rounded-circle(src='../../css/icon/serval.png' style='background-color: white;')
            .col
              .row.align-items-center
                .col-md-7
                  h4.mb-1(style='font-size: 2rem;') #{userInfo.userName}
                  .text-muted.mb-1(style='font-size: 1rem;') #{userInfo.userEmail}
                  .user-job.align-items-center(style='display: flex;')
                    p.medium.mr-2.mb-0
                      if userDetail 
                        span.badge.badge-secondary(style='font-size: 100%;') #{userDetail.user_job}
                      else
                        span.badge.badge-secondary(style='font-size: 100%;') [Edit Your Job]
                    button.pr-2.btn.btn-edit_job-title.mt-0.mb-0.mt-2(type='button' data-bs-toggle='modal' data-bs-target=`#editJobModal` data-bs-whatever=`${userInfo.userEmail}` id=`${userInfo.userId}`)
                      i.h5.fa.fa-solid.fa-pencil.text-secondary
                    #editJobModal.modal.fade(tabindex='-1' aria-labelledby='editJobModalLabel' aria-hidden='true')
                      .modal-dialog
                        .modal-content
                          .modal-header
                            h5#exampleModalLabel.modal-title Edit Job Title
                            button.btn-close(type='button' data-bs-dismiss='modal' aria-label='Close')
                          .modal-body
                            form
                              .mb-3
                                label.col-form-label(for='user-email') User Email
                                input#user-email.form-control.input_useremail
                              .mb-3
                                label.col-form-label(for='job-title') Job Title
                                input#job-title.form-control.input_job-title
                          .modal-footer
                            button.btn.btn-secondary(type='button' data-bs-dismiss='modal') Close
                            button.btn.btn-primary.btn-modal-edit_job-title(type='submit') Update Job Title
              .row.mb-4
                .col-md-7(style='font-size: 1.2rem; font-weight: 300;')
                  h3.text-muted
                  | Start your test journey with Serval now.
                button.btn.btn-lg.btn-right.btn-info.btn-create_project(type='button' data-bs-toggle='modal' data-bs-target='#exampleModal' data-bs-whatever='') Create Project
                #exampleModal.modal.fade(tabindex='-1' aria-labelledby='exampleModalLabel' aria-hidden='true')
                  .modal-dialog
                    .modal-content
                      .modal-header
                        h5#exampleModalLabel.modal-title Add Project
                        button.btn-close(type='button' data-bs-dismiss='modal' aria-label='Close')
                      .modal-body
                        form
                          .mb-3
                            label.col-form-label(for='project-name') Project Name
                            input#project-name.form-control.input_project-name(type='string' placeholder='My Project')
                      .modal-footer
                        button.btn.btn-secondary(type='button' data-bs-dismiss='modal') Close
                        button.btn.btn-primary.btn-modal-create_project(type='submit') Create Project

        .title-divider.mb-4(style='height: 0; overflow: hidden; border-top: 1px solid #e9ecef;')
        .col-12.align-items-center
          .title-bar.justify-content-between(style='display: flex')
            h2.h3.mb-4.page-title(style='font-family: PF Tempesta Seven Extended, sans-serif; font-size: 1.5rem;') Dashboard
          .row.mt-1.align-items-center.mr-0
            .card-columns.basic-info(style='display: flex;')
              .card.shadow.mb-4.mt-0.user-reports-amount
                .card-header Project Counts
                .card-body(style='display: flex; align-items: center; justify-content: center; flex-direction: column; flex-wrap: wrap;')
                  if userDetail
                    if userDetail.projects
                      .mb-1.text-info(style='font-size: 10rem;') #{userDetail.projects.length}
                  else 
                    .mb-1 0
                  .mb-1.text-info projects
              .card.shadow.mb-4.mt-0.user-line-chart
                .card-header Report Count Chart 
                .card-body
                  #bar-chart.report-detail(style='height: 300px; padding: 0px; position: relative;' report-detail=`${JSON.stringify(userProjects)}`)
                    canvas.flot-base(width='764' height='300' style='direction: ltr; position: absolute; left: 0px; top: 0px; width: 764.5px; height: 300px;')
                    canvas.flot-overlay(width='764' height='300' style='direction: ltr; position: absolute; left: 0px; top: 0px; width: 764.5px; height: 300px;')
                    .flot-svg(style='position: absolute; top: 0px; left: 0px; height: 100%; width: 100%; pointer-events: none;')
                      svg(style='width: 100%; height: 100%;')
                        g.flot-x-axis.flot-x1-axis.xAxis.x1Axis(style='position: absolute; inset: 0px;')
                          //- each element in userDetail.projects
                          //- - let i = 0
                          //- if userDetail
                          //-   while i < userProjects.length
                          //-     text.flot-tick-label.tickLabel.report-graph(x=`${50+90*i}` y='294' style='style=position: absolute; text-align: center; font-size: 1rem;') #{userProjects[i].projectName} 
                          //-     - i++
                          //- text.flot-tick-label.tickLabel(x='161.3224431818182' y='294' style='position: absolute; text-align: center;') Total
                          //- text.flot-tick-label.tickLabel(x='298.43039772727275' y='294' style='position: absolute; text-align: center;') Passed
                          //- text.flot-tick-label.tickLabel(x='430.94460227272725' y='294' style='position: absolute; text-align: center;') Failed
                          //- text.flot-tick-label.tickLabel(x='560.4822443181819' y='294' style='position: absolute; text-align: center;') Pending

                        g.flot-y-axis.flot-y1-axis.yAxis.y1Axis(style='position: absolute; inset: 0px; ')
                          text.flot-tick-label.tickLabel(x='8.953125' y='269' style='position: absolute; text-align: right; font-size: 1rem;') 0
                          text.flot-tick-label.tickLabel(x='8.953125' y='205.5' style='position: absolute; text-align: right; font-size: 1rem;') 5
                          text.flot-tick-label.tickLabel(x='1' y='15' style='position: absolute; text-align: right; font-size: 1rem;') 20
                          text.flot-tick-label.tickLabel(x='1' y='142' style='position: absolute; text-align: right; font-size: 1rem;') 10
                          text.flot-tick-label.tickLabel(x='1' y='78.5' style='position: absolute; text-align: right; font-size: 1rem;') 15
              //- .card.shadow.mb-4.mt-0.user-pie-chart
              //-   .card-header Success Rate
              //-   .card-body
              //-     #donut-chart(style='height: 300px; padding: 0px; position: relative;')
              //-       canvas.flot-base(width='764' height='300' style='direction: ltr; position: absolute; left: 0px; top: 0px; width: 764.5px; height: 300px;')
              //-       canvas.flot-overlay(width='764' height='300' style='direction: ltr; position: absolute; left: 0px; top: 0px; width: 764.5px; height: 300px;')
              //-       if reportStatus
              //-         span#pieLabel0.pieLabel(style='position: absolute; top: 69.5px; left: 440.203px;')
              //-           div(style='font-size:13px; text-align:center; padding:2px; color: #fff; font-weight: 600;')
              //-             | Pass
              //-             br
              //-             p= reportCalculated[0].passRate
              //-         span#pieLabel1.pieLabel(style='position: absolute; top: 209.5px; left: 418.203px;')
              //-           div(style='font-size:13px; text-align:center; padding:2px; color: #fff; font-weight: 600;')
              //-             | Fail
              //-             br
              //-             p= 100-reportCalculated[0].passRate
  script.
    $('.btn-create_project').on('click', function(event) {
      event.preventDefault();
      //- window.location.assign('./editproject');
    })


    $('.btn-modal-create_project').on('click', function(event) {
      event.preventDefault();
      const projectName = $('.input_project-name').val();

      axios({
        method: 'post',
        url: '/editproject',
        data: {
          projectName: projectName,
        },
        headers: {'Content-Type': 'application/json'}
      })
      .then((response) => {
        if (response.status === 200) {
          Swal.fire({
            text: 'Create project successfully',
            icon: "success",
            confirmButtonClass: "btn-success",
          })
          setTimeout(()=> {
            window.location.assign(`./collections?projectid=${response.data.projectId}`);
          }, 2000)
        }
      })
      .catch((error) => {
        console.log('Catch project error')
        Swal.fire({
            text: 'Create project error',
            icon: "error",
            confirmButtonClass: "btn-danger",
        })
        setTimeout(()=> {
          window.location.reload();
        }, 2000)
      })
    })

    $('.btn-edit_job-title').on('click', function(event) {
      //- let modal = $(this).attr('data-bs-target')
      $('#editJobModal').on('show.bs.modal', function(event) {
      })
      
      let userEmail = $(this).attr('data-bs-whatever');
      $('input#user-email').val(userEmail).prop('readonly', true);

    })


    $('.btn-modal-edit_job-title').on('click', function(event) {
      event.preventDefault();

      //- const userId = $('.btn-edit_job-title').id;
      const jobTitle = $('.input_job-title').val();

      axios({
        method: 'put',
        url: '/edituser',
        data: {
          jobTitle: jobTitle,
        },
        headers: {'Content-Type': 'application/json'}
      })
      .then((response) => {
        if (response.status === 200) {
          Swal.fire({
            text: 'Update job title successfully',
            icon: "success",
            confirmButtonClass: "btn-success",
          })
          setTimeout(()=> {
            window.location.reload();
          }, 2000)
        }
      })
      .catch((error) => {
        Swal.fire({
            text: 'Update job title error',
            icon: "error",
            confirmButtonClass: "btn-danger",
        })
        setTimeout(()=> {
          window.location.reload();
        }, 2000)
      })
    })

    $(function () {
      /*
      * BAR CHART
      * ---------
      */
      let reportDetail = JSON.parse($('.report-detail').attr('report-detail'));
      let reportName = [];

      let reportData = [];
      for (let k=0; k < reportDetail.length; k++) {
        reportName.push([k, reportDetail[k].projectName])
        reportData.push([k, reportDetail[k].reports])
      }

      let bar_data = {
        data: reportData,
        //- data: [
        //-   [1, 6],
        //-   [2, 0],
        //-   [3, 0],
        //-   [4, 0],
        //-   [5, 0],
        //- ],
        bars: { show: true },
      };
      $.plot('#bar-chart', [bar_data], {
        grid: {
          borderWidth: 1,
          borderColor: '#f3f3f3',
          tickColor: '#f3f3f3',
        },
        series: {
          bars: {
            show: true,
            barWidth: 0.5,
            align: 'center',
          },
        },
        colors: ['#6E85B7'],
        xaxis: {
          ticks: reportName,
          //- ticks: [
          //-   [1, 'stylish'],
          //-   [2, 'Wolfon'],
          //-   [3, 'DataCat'],
          //-   [4, 'filmo'],
          //-   [5, 'turtlemq'],
          //- ],
        },
      });
      /* END BAR CHART */
    });
