extends layout.pug

block content
  link(rel='stylesheet', href='../../css/common.css')
  
  main.main-content(role='main')
    .container-fluid
      .row.justify-content-center
        .col-12
          form.input-form
            h1(style='font-family: PF Tempesta Seven Extended, sans-serif; font-size: 2rem;') Projects
              button.btn.btn-right.btn-success.btn-block.btn-create_project(type='button' data-bs-toggle='modal' data-bs-target='#exampleModal' data-bs-whatever='') Create Project
            #exampleModal.modal.fade(tabindex='-1' aria-labelledby='exampleModalLabel' aria-hidden='true')
              .modal-dialog
                .modal-content
                  .modal-header
                    h5#exampleModalLabel.modal-title Add Project
                    button.btn-close(type='button' data-bs-dismiss='modal' aria-label='Close')
                  .modal-body
                    form
                      .mb-3
                        label.col-form-label(for='project-name') Project Name
                        input#project-name.form-control.input_project-name(type='string' placeholder='My Project')
                  .modal-footer
                    button.btn.btn-secondary(type='button' data-bs-dismiss='modal') Close
                    button.btn.btn-primary.btn-modal-create_project(type='submit') Create Project
          .cards
            .card
              .card-header
                .card-title
                  .user-id User ID: #{userProjects[0].user_id}
                  .user-email Email: #{userProjects[0].user_email}
                .card-tools
              .card-body.p-0
                table.table
                  if !userProjects[0].project_name
                    div(style='display: flex; justify-content: center;')
                      .text-muted.display-6(style='padding-top: 20px') Create your first project!
                  else 
                    thead
                      tr
                        //- th(style='width: 10px') #
                        th.text-dark Project ID
                        th.text-dark Name
                        th.text-dark Environments
                        th.text-dark Collections
                        th.text-dark Edit
                        th.text-dark Reports
                        //- th(style='width: 40px') Label
                    tbody
                        - let i = 0
                        while i < userProjects.length
                          tr 
                            td #{userProjects[i]._id}
                            td #{userProjects[i].project_name}
                            td 
                              button.btn.btn-primary.btn-environments(type='submit' id=`${userProjects[i]._id}`) View
                            td 
                              button.btn.btn-warning.btn-collections(type='submit' id=`${userProjects[i]._id}`) View
                            td 
                              button.btn.btn-danger.btn-delete(type='submit' id=`${userProjects[i]._id}`) Delete
                            td 
                              button.btn.btn-secondary.btn-report(type='submit' id=`${userProjects[i]._id}`) View
                          - i++

  script.
    $('.btn-create_project').on('click', function(event) {
      event.preventDefault();
      //- window.location.assign('./editproject');
    })

    $('.btn-collections').on('click', function(event) {
      event.preventDefault();
      const projectId = this.id;
      window.location.assign(`./collections?projectid=${projectId}`);
    })

    $('.btn-environments').on('click', function(event) {
      event.preventDefault();
      const projectId = this.id;
      window.location.assign(`./environments?projectid=${projectId}`);
    })


    $('.btn-modal-create_project').on('click', function(event) {
      event.preventDefault();
      const projectName = $('.input_project-name').val();

      axios({
        method: 'post',
        url: '/editproject',
        data: {
          projectName: projectName,
        },
        headers: {'Content-Type': 'application/json'}
      })
      .then((response) => {
        if (response.status === 200) {
          swal({
            text: 'Create project successfully',
            icon: "success",
            confirmButtonClass: "btn-success",
          })
          setTimeout(()=> {
            window.location.reload();
          }, 2000)
          //- alert('Create project successfully')
          //- window.location.reload();
        }
      })
      .catch((error) => {
        console.log('Catch project error')
        swal({
            text: 'Create project error',
            icon: "error",
            confirmButtonClass: "btn-danger",
        })
        setTimeout(()=> {
          window.location.reload();
        }, 2000)
      })
    })


    $('.btn-delete').on('click', function(event) {
      event.preventDefault();

      const projectId = this.id;

      axios({
        method: 'delete',
        url: '/editproject',
        data: {
          projectId: projectId,
        },
        headers: {'Content-Type': 'application/json'}
      })
      .then((response) => {
        if (response.status === 200) {
          swal({
            text: 'Delete project successfully',
            icon: "success",
            confirmButtonClass: "btn-success",
          })
          setTimeout(()=> {
            window.location.reload();
          }, 2000)
        }
      })
      .catch((error) => {
        console.log('catch: ', error)
        swal({
            text: 'Delete project error',
            icon: "error",
            confirmButtonClass: "btn-danger",
        })
        setTimeout(()=> {
          window.location.reload();
        }, 2000)
        //- alert('delete project error')
      })
    })

    $('.btn-report').on('click', function(event) {
      event.preventDefault();
      const projectId = this.id;

      window.location.assign(`./reports?projectid=${projectId}`);

    })