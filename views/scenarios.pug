extends layout.pug

block content
    link(rel='stylesheet', href='../../css/common.css')
    link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.52.2/codemirror.min.css')
    script(type='text/javascript' src='https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.52.2/codemirror.min.js')
    script(src='https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js')
    script(src='https://code.jquery.com/jquery-3.2.1.min.js', integrity='sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=', crossorigin='anonymous')
    script(src='../../src/gherkin.js')
    div.content-wrapper
        nav(style="--bs-breadcrumb-divider: '>';" aria-label='breadcrumb')
            ol.breadcrumb
                li.breadcrumb-item
                    a(href='') Project
                li.breadcrumb-item
                    a(href='') Collection
                li.breadcrumb-item
                    a(href='') API
                li.breadcrumb-item.active(aria-current='page') Scenario

        form.input-form
            h1 Scenarios
            button.btn.btn-right.btn-success.btn-block.btn-create_scenario(type='button' data-bs-toggle='modal' data-bs-target='#exampleModal' data-bs-whatever=`${userScenarios[0].apiId}`) Create Scenario
            #exampleModal.modal.fade(tabindex='-1' aria-labelledby='exampleModalLabel' aria-hidden='true')
                .modal-dialog.modal-lg
                    .modal-content
                        .modal-header
                            h5#exampleModalLabel.modal-title Add Scenario
                            button.btn-close(type='button' data-bs-dismiss='modal' aria-label='Close')
                        .modal-body
                            form
                                .mb-3 
                                    label.col-form-label(for='api-id') API ID
                                    input#api-id.form-control.input_apiid
                                .mb-3
                                    label.col-form-label(for='scenario') Test Document (Scenario)
                                    textarea#code(name='code' placeholder='# Write your test document in gherkin language here! \n # The serval can only read gherkin now, meow.')
                                        | # Write your test document scenario in gherkin language here! 
                                        | # The serval can only read gherkin now, meow.
                        .modal-footer
                            button.btn.btn-secondary(type='button' data-bs-dismiss='modal') Close
                            button.btn.btn-primary.btn-modal-create_scenario(type='submit') Create Scenario
        .cards
            .card
                .card-header
                    .card-title API ID: #{userScenarios[0].apiId}
                    .card-tools
                .card-body.p-0
                    table.table
                        thead
                            tr
                                //- th(style='width: 10px') #
                                th(style='width: 5px') ID
                                th(style='width: 10px') Title
                                th Description
                                th Steps
                                th Data 
                                th Edit 
                                th Run Test
                                //- th(style='width: 40px') Label
                        tbody
                            if userScenarios[0].scenario
                                - let i = 0
                                while i < userScenarios.length
                                    tr 
                                        td #{userScenarios[i].scenario._id}
                                        td #{userScenarios[i].scenario.title}
                                        td #{userScenarios[i].scenario.description}
                                        td 
                                            button.btn.btn-warning.btn-scenarios(type='submit' id=`${userScenarios[i].scenario._id}`) More
                                        td 
                                            button.btn.btn-warning.btn-scenarios(type='submit' id=`${userScenarios[i].scenario._id}`) More
                                        td 
                                            button.btn.btn-danger.btn-delete(type='submit' id=`${userScenarios[i].scenario._id}`) Delete
                                        td 
                                            button.btn.btn-info.btn-runtest-single(type='submit' id=`${userScenarios[i].scenario._id}` data-bs-toggle='collapse' data-bs-target=`#runtest-single-${i}` aria-expanded='false' aria-controls=`#runtest-single-${i}`) Run the scenario
                                            .collapse(id=`runtest-single-${i}`)
                                                .card.card-body.p-0
                                                    table.table
                                                        thead
                                                        tbody
                                                            if envInfo
                                                                - let j = 0
                                                                while j < envInfo.length
                                                                    tr 
                                                                        td #{envInfo[j].domain_name}
                                                                        td #{envInfo[j].title}
                                                                        td 
                                                                            button.btn.btn-info.btn-runtest-in-toggle(type='submit' id=`${userScenarios[i].scenario._id}` domain=`${envInfo[j].domain_name}` title=`${envInfo[j].title}`) Run
                                                                    - j++

                                    - i++
        .input-form
            if envInfo && userScenarios[0].scenario
                button.btn.btn-right.btn-secondary.btn-runtest-multi(type='submit' id=`${userScenarios[0].apiId}` data-bs-toggle='collapse' data-bs-target='#runtest-multi' aria-expanded='false' aria-controls='runtest-multi') Run all the scenarios
                #runtest-multi.collapse
                    .card.card-body.p-0
                        table.table
                            thead
                            tbody
                                if envInfo
                                    - let k = 0
                                    while k < envInfo.length
                                        tr 
                                            td #{envInfo[k].domain_name}
                                            td #{envInfo[k].title}
                                            td 
                                                button.btn.btn-secondary.btn-runalltest-in-toggle(type='submit' id=`${userScenarios[0].apiId}` domain=`${envInfo[k].domain_name}` title=`${envInfo[k].title}`) Run 
                                        - k++
    script.
        $('#exampleModal').on('shown.bs.modal', function() {
            // src: https://stackoverflow.com/questions/17086538/codemirror-content-not-visible-in-bootstrap-modal-until-it-is-clicked
            // initialize codemirror here
            let editor = CodeMirror.fromTextArea(document.getElementById("code"), {
                lineNumbers: true,
                matchBrackets: true,
                mode: 'text/x-feature'
            });

            $('.btn-modal-create_scenario').on('click', function(event) {
                console.log('create scenario in modal clicked')
                event.preventDefault();

                const apiId = $('.input_apiid').val();
                const featureCode = editor.getValue();

                axios({
                    method: 'post',
                    url: 'http://localhost:3001/api/1.0/editscenario',
                    data: {
                        apiId: apiId,
                        featureCode: featureCode,
                    },
                    headers: {'Content-Type': 'application/json'},
                })
                .then((response) => {
                    if (response.status === 200) {
                        alert('create scenario successfully')
                        window.location.reload();
                    }
                })
                .catch((error) => {
                    console.log('in error');
                    console.log('catch: ', error)
                    alert('create scenario error')
                })
            })
        })


        $('#exampleModal').on('show.bs.modal', function(event) {
            let button = event.relatedTarget;
            let apiId = $('.btn-create_scenario').attr('data-bs-whatever');
            $('input#api-id').val(apiId).prop('readonly', true);
        })

        $('.btn-create_scenario').on('click', function(event) {
            console.log('create_scenario clicked')
            event.preventDefault();
        })

        $('.btn-runtest-in-toggle').on('click', function(event) {
            console.log('run test in toggle clicked');
            event.preventDefault();
            const apiId = $('.card-title').text().replace('API ID: ', '');
            const scenarioId = this.id;
            const domainName = $('.btn-runtest-in-toggle').attr('domain');
            const title = $('.btn-runtest-in-toggle').attr('title');

            axios({
                method: 'post',
                url: 'http://localhost:3001/api/1.0/testrun',
                data: {
                    apiId: apiId,
                    scenarioId: scenarioId,
                    domainName: domainName,
                    title: title,
                }, 
                headers: {'Content-Type': 'application/json'}
            })
            .then((response) => {
                if (response.status === 200) {
                    alert('Run scenario successfully')
                    window.location.reload();
                }
            })
            .catch((error) => {
                console.log('catch: ', error)
                alert('Run scenario error')
            })
        })


        $('.btn-delete').on('click', function(event) {
            console.log('delete_scenario clicked')
            event.preventDefault();

            const apiId = $('.card-title').text().replace('API ID: ', '');
            const scenarioId = this.id;
            console.log('scenarioId: ', scenarioId)

            axios({
                method: 'delete',
                url: 'http://localhost:3001/api/1.0/editscenario',
                data: {
                    apiId: apiId,
                    scenarioId: scenarioId,
                },
                headers: {'Content-Type': 'application/json'}
            })
            .then((response) => {
                if (response.status === 200) {
                    alert('delete scenario successfully')
                    //- window.location.assign('./testresult');
                    window.location.reload();
                }
            })
            .catch((error) => {
                console.log('in error');
                console.log('catch: ', error)
                alert('delete scenario error')
            })
        })


